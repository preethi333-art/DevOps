 What is Elastic Load Balancer[It overcome the loads on server to increase the server capacity]
-> Elastic load Balancer automatically divert the incoming traffic into multiple targets.
It automatically scales and balances the load to ensure high avaliablity and fault tolerance for application

# Types of Load Balancer
1) Classic Load Balancer
2) Application Load Balancer
3) Network Load Balancer
4) Gateway Load Balancer

Classic Load Balancer
It is a Old version
Aws is not recommand because it cost is very high

Application Load Balancer
It advance version of Classic load balancer
It support the port mapping (related to http and https)

Network Load Balancer
It will work as transport layer
It will work main on TCP and UDP protocols
TCP [Transmission control protocol]
UDP [User dataground protocol]

Gateway Load Balancer
It is used for security Purpose

# How to create the Load Balancer
-> First we will create two instances and connect two instances with mobaxstream
-> you will install below commands in both instances
	sudo yum update
	sudo yum install httpd -y
	sudo service httpd start
	sudo service httpd enable
	sudo service httpd status
	cd /var/www/html/
	sudo vi index.html
-> We will write something differently in both instances
-> After that you will browser your Ip and along with 80 port to both instances
-> Before we create load balancer we will create target-group
-> Go to target-group and create the target group and add your instances in target group
-> After create target-group and go to load balancer and create load balancer with that target group
-> After create load balancer then you will take load balancer DNS URL and paste the browser


======================================================================================================================


IN AWS
#  Types of Load Balancer
1) Classic Load Balancer
2) Application Load Balancer
3) Network Load Balancer
4) Gateway Load Balancer
                                
                                   
& layers of OSI model

user want to access linkedin.com/preethi

ur request from user is travelling 7 diff layers 

user  (internally)
  |                                                                           
7.Application layer(http/https) --> decide what kind of protocol used to talk to server http/sftp/ftp we wont specify in browser, it will do automation uses http  
no nned to specify explicitly

6.Presentation layer(encryption and decryption) --> should this request secure or its okay to send insecure request take care of encrypting your request using SSL/TLS algorithm

5.session layer(create a session object)--> what kind of client requested when created

4.transport layer(request segregated into smaller chunks)--> split in to small chunks, and chexks flows any errors sever easily read
3.network layer(routers) --> your req goes to multiple routers--used for logical addressing
2.Datalink layer(switch) --> we have all switches --used for physical addressing
1.physical layer(cable) --> all cables connected to server 
  |
server

user initiated http request


cable--switch-- router

# Types of Load Balancer
1) Classic Load Balancer 2009                                       
2) Application Load Balancer 2016
3) Network Load Balancer
4) Gateway Load Balancer  transport layer + network layer

   +---------------------+
          |      ELB            |
          +---------------------+
                     |
        ----------------------------             |
       |                           |
+------------+                 +------------+
| Listener 1 |                 | Listener 2 |
|    :80     |                 |    443     |
+------------+                 +------------+
       |         
       |
     +---------------+---------------+
     |                               |
     |                               |
+------------+                 +------------+
| Target     |                 | Target     |
| Group 1    |                 | Group 2    |
+------------+                 +------------+
     |                               |
     |                               |
+------------+                 +------------+
| Instances  |                 | Instances  |
| (or IPs)   |                 | (or IPs)   |
+------------+                 +------------+                          


The ELB distributes incoming traffic to the Listener.
The Listener routes the traffic to the appropriate Target Groups based on the rules you define.
Each Target Group contains multiple Instances (or IP addresses) that handle the traffic.


when ALB
if you want to intercept user request at layer7 and routing traffic based on host
   path
   domain
intercept http request-->read req means what are headers or path and route based on path or host ex amazon.com/.in

but costly because it has advance capabilities it intercept and decide which server 


network LB acts on layer 4  _--> less costly no latency
NO PATH/HOST/DOMAIn BASED ROUTING
works Based on IPs and ports
mainly used in steaming platform
perform routing on tcp and uDp

intercept at L4 depending on port and IP forward reques
============================================================================
-==========================================================================
==========================================================================
AsHOK IT
=========================
What is Load Balancer ?
=========================

=> When we run our application in single server then we have to face below challenges

	1) One server should handle all reqs
	2) Burden will increase on server
	3) Response will be delayed for clients
	4) Server can crash
	5) Single Point Of Failure
	6) Business Loss

=> To avoid above problems, we will run our application using Load Balancer.

=> Load Balancer is used to distribute load to multiple servers in round robbin fashion.

=> We have below advantages with Load Balancer

	1) App will run in multiple severs

	2) Load will be distributed

	3) Burden will be reduces on servers

	4) Fast Performance

	5) High Availability


=> In AWS we have 4 types of Load Balancers

	1) Application Load Balancer (http & https)

	2) Network Load Balancer

	3) Gateway Load Balancer

	4) Classic Load Balancer

=======================
Load Balancer Lab Task
=======================

Step-1) Create EC2 VM-1 with below user data

#! /bin/bash
sudo su
yum install httpd -y
cd /var/www/html
echo "<html><h1>Life Insurance Server - 1</h1></html>" > index.html
service httpd start


Step-2) Create EC2 VM-2 with below user data

#! /bin/bash
sudo su
yum install httpd -y
cd /var/www/html
echo "<html><h1>Life Insurance Server - 2</h1></html>" > index.html
service httpd start


Step-3) Add these 2 instances to one "Target Group"

Step-4) Create Load Balancer with Target Group (ALB)

			Schme : Internet Facing  -- ANYONE can access from outside

Note: ALB runs on HTTP protocol with 80 port number

Step-5) Access Load Balancer DNS in browser 
(it will route the requests to our servers in round robbin fashion)

===============================
Monolithic Vs Microservices
===============================

Monolithic => Developing all functionalities in one single application

Note: For monolithic application we need single target group

Microservices => Dividing functionalities into multiple apis

Note: For microservices application we need multiple target groups



Monolithic  --> only one target Group( have same application in different servers) 
TG! --> s1 , s2 
1. round robin is used to go to which server randmoly
##### Microservices Load Balancing : https://www.youtube.com/watch?v=QvEJ8--zneU ###
multiple  target Group 
TG1-->same Application multiple servers (s1,s2)
TG2-->same Application multiple servers (s3,s4)
1. routing based on path   whther to go to TG1 or TG2
2. round robin internally in target groups to which server 

==============
OSI Model
==============

=> Open Systems Interconnection

=> OSI model represents how request will transfer from client to server

=> OSI model contains 7 layers


Layer-7 : Application Layer

Layer-6 : Presentation Layer

Layer-5 : Session Layer

Layer-4 : Transport Layer

Layer-3 : Network Layer

Layer-2 : Data Link Layer

Layer-1 : Physical Layer


=> ALB works at layer-7 (application layer)

	Ex: For http, https & microservices
		Advanced routings
		header based routing
		path based routing

=> NLB works at Layer-4 (Transport layer)

	Ex: TCP, UDP
		For gaming servers
		For video streaming

=> GWLB works at layer-3 (Network layer)

	Ex: Third party virtual appliances
		Firewalls
		VPNs
		High Security


